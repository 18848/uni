//------------------------------------------------------------------------------
// <auto-generated>
//     Este código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações a este ficheiro poderão provocar um comportamento incorrecto e perder-se-ão se
//     o código for regenerado.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dashboard.Casos {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ModeloCasos", Namespace="http://schemas.datacontract.org/2004/07/SOAP")]
    [System.SerializableAttribute()]
    public partial class ModeloCasos : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NifField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Nif {
            get {
                return this.NifField;
            }
            set {
                if ((this.NifField.Equals(value) != true)) {
                    this.NifField = value;
                    this.RaisePropertyChanged("Nif");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Casos.ICasos")]
    public interface ICasos {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICasos/GetCasos", ReplyAction="http://tempuri.org/ICasos/GetCasosResponse")]
        System.Data.DataSet GetCasos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICasos/GetCasos", ReplyAction="http://tempuri.org/ICasos/GetCasosResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCasosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICasos/GetCasosByNIF", ReplyAction="http://tempuri.org/ICasos/GetCasosByNIFResponse")]
        System.Data.DataSet GetCasosByNIF(int nif);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICasos/GetCasosByNIF", ReplyAction="http://tempuri.org/ICasos/GetCasosByNIFResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCasosByNIFAsync(int nif);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICasos/GetCasosByData", ReplyAction="http://tempuri.org/ICasos/GetCasosByDataResponse")]
        System.Data.DataSet GetCasosByData(string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICasos/GetCasosByData", ReplyAction="http://tempuri.org/ICasos/GetCasosByDataResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCasosByDataAsync(string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICasos/AddCasos", ReplyAction="http://tempuri.org/ICasos/AddCasosResponse")]
        string AddCasos(Dashboard.Casos.ModeloCasos casos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICasos/AddCasos", ReplyAction="http://tempuri.org/ICasos/AddCasosResponse")]
        System.Threading.Tasks.Task<string> AddCasosAsync(Dashboard.Casos.ModeloCasos casos);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICasosChannel : Dashboard.Casos.ICasos, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CasosClient : System.ServiceModel.ClientBase<Dashboard.Casos.ICasos>, Dashboard.Casos.ICasos {
        
        public CasosClient() {
        }
        
        public CasosClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CasosClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CasosClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CasosClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet GetCasos() {
            return base.Channel.GetCasos();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCasosAsync() {
            return base.Channel.GetCasosAsync();
        }
        
        public System.Data.DataSet GetCasosByNIF(int nif) {
            return base.Channel.GetCasosByNIF(nif);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCasosByNIFAsync(int nif) {
            return base.Channel.GetCasosByNIFAsync(nif);
        }
        
        public System.Data.DataSet GetCasosByData(string data) {
            return base.Channel.GetCasosByData(data);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCasosByDataAsync(string data) {
            return base.Channel.GetCasosByDataAsync(data);
        }
        
        public string AddCasos(Dashboard.Casos.ModeloCasos casos) {
            return base.Channel.AddCasos(casos);
        }
        
        public System.Threading.Tasks.Task<string> AddCasosAsync(Dashboard.Casos.ModeloCasos casos) {
            return base.Channel.AddCasosAsync(casos);
        }
    }
}
